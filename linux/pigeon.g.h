// Autogenerated from Pigeon (v22.4.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#ifndef PIGEON_PIGEON_G_H_
#define PIGEON_PIGEON_G_H_

#include <flutter_linux/flutter_linux.h>

G_BEGIN_DECLS

/**
 * MaplibreTileScheme:
 * MAPLIBRE_TILE_SCHEME_XYZ:
 * Slippy map tilenames scheme.
 * MAPLIBRE_TILE_SCHEME_TMS:
 * OSGeo spec scheme.
 *
 * Influences the y direction of the tile coordinates.
 */
typedef enum {
  MAPLIBRE_TILE_SCHEME_XYZ = 0,
  MAPLIBRE_TILE_SCHEME_TMS = 1
} MaplibreTileScheme;

/**
 * MaplibreRasterDemEncoding:
 * MAPLIBRE_RASTER_DEM_ENCODING_TERRARIUM:
 * Terrarium format PNG tiles.
 * MAPLIBRE_RASTER_DEM_ENCODING_MAPBOX:
 * Mapbox Terrain RGB tiles.
 * MAPLIBRE_RASTER_DEM_ENCODING_CUSTOM:
 * Decodes tiles using the redFactor, blueFactor, greenFactor, baseShift
 * parameters.
 *
 * The encoding used by this source. Mapbox Terrain RGB is used by default.
 */
typedef enum {
  MAPLIBRE_RASTER_DEM_ENCODING_TERRARIUM = 0,
  MAPLIBRE_RASTER_DEM_ENCODING_MAPBOX = 1,
  MAPLIBRE_RASTER_DEM_ENCODING_CUSTOM = 2
} MaplibreRasterDemEncoding;

/**
 * MaplibreLngLat:
 *
 * A longitude/latitude coordinate object.
 */

G_DECLARE_FINAL_TYPE(MaplibreLngLat, maplibre_lng_lat, MAPLIBRE, LNG_LAT, GObject)

/**
 * maplibre_lng_lat_new:
 * lng: field in this object.
 * lat: field in this object.
 *
 * Creates a new #LngLat object.
 *
 * Returns: a new #MaplibreLngLat
 */
MaplibreLngLat* maplibre_lng_lat_new(double lng, double lat);

/**
 * maplibre_lng_lat_get_lng
 * @object: a #MaplibreLngLat.
 *
 * The longitude
 *
 * Returns: the field value.
 */
double maplibre_lng_lat_get_lng(MaplibreLngLat* object);

/**
 * maplibre_lng_lat_get_lat
 * @object: a #MaplibreLngLat.
 *
 * The latitude
 *
 * Returns: the field value.
 */
double maplibre_lng_lat_get_lat(MaplibreLngLat* object);

/**
 * MaplibreScreenLocation:
 *
 * A pixel location / location on the device screen.
 */

G_DECLARE_FINAL_TYPE(MaplibreScreenLocation, maplibre_screen_location, MAPLIBRE, SCREEN_LOCATION, GObject)

/**
 * maplibre_screen_location_new:
 * x: field in this object.
 * y: field in this object.
 *
 * Creates a new #ScreenLocation object.
 *
 * Returns: a new #MaplibreScreenLocation
 */
MaplibreScreenLocation* maplibre_screen_location_new(double x, double y);

/**
 * maplibre_screen_location_get_x
 * @object: a #MaplibreScreenLocation.
 *
 * The x coordinate
 *
 * Returns: the field value.
 */
double maplibre_screen_location_get_x(MaplibreScreenLocation* object);

/**
 * maplibre_screen_location_get_y
 * @object: a #MaplibreScreenLocation.
 *
 * The y coordinate
 *
 * Returns: the field value.
 */
double maplibre_screen_location_get_y(MaplibreScreenLocation* object);

/**
 * MaplibreMapCamera:
 *
 * The current position of the map camera.
 */

G_DECLARE_FINAL_TYPE(MaplibreMapCamera, maplibre_map_camera, MAPLIBRE, MAP_CAMERA, GObject)

/**
 * maplibre_map_camera_new:
 * center: field in this object.
 * zoom: field in this object.
 * tilt: field in this object.
 * bearing: field in this object.
 *
 * Creates a new #MapCamera object.
 *
 * Returns: a new #MaplibreMapCamera
 */
MaplibreMapCamera* maplibre_map_camera_new(MaplibreLngLat* center, double zoom, double tilt, double bearing);

/**
 * maplibre_map_camera_get_center
 * @object: a #MaplibreMapCamera.
 *
 * Gets the value of the center field of @object.
 *
 * Returns: the field value.
 */
MaplibreLngLat* maplibre_map_camera_get_center(MaplibreMapCamera* object);

/**
 * maplibre_map_camera_get_zoom
 * @object: a #MaplibreMapCamera.
 *
 * Gets the value of the zoom field of @object.
 *
 * Returns: the field value.
 */
double maplibre_map_camera_get_zoom(MaplibreMapCamera* object);

/**
 * maplibre_map_camera_get_tilt
 * @object: a #MaplibreMapCamera.
 *
 * Gets the value of the tilt field of @object.
 *
 * Returns: the field value.
 */
double maplibre_map_camera_get_tilt(MaplibreMapCamera* object);

/**
 * maplibre_map_camera_get_bearing
 * @object: a #MaplibreMapCamera.
 *
 * Gets the value of the bearing field of @object.
 *
 * Returns: the field value.
 */
double maplibre_map_camera_get_bearing(MaplibreMapCamera* object);

/**
 * MaplibreLngLatBounds:
 *
 * LatLng bound object
 */

G_DECLARE_FINAL_TYPE(MaplibreLngLatBounds, maplibre_lng_lat_bounds, MAPLIBRE, LNG_LAT_BOUNDS, GObject)

/**
 * maplibre_lng_lat_bounds_new:
 * longitude_west: field in this object.
 * longitude_east: field in this object.
 * latitude_south: field in this object.
 * latitude_north: field in this object.
 *
 * Creates a new #LngLatBounds object.
 *
 * Returns: a new #MaplibreLngLatBounds
 */
MaplibreLngLatBounds* maplibre_lng_lat_bounds_new(double longitude_west, double longitude_east, double latitude_south, double latitude_north);

/**
 * maplibre_lng_lat_bounds_get_longitude_west
 * @object: a #MaplibreLngLatBounds.
 *
 * Gets the value of the longitudeWest field of @object.
 *
 * Returns: the field value.
 */
double maplibre_lng_lat_bounds_get_longitude_west(MaplibreLngLatBounds* object);

/**
 * maplibre_lng_lat_bounds_get_longitude_east
 * @object: a #MaplibreLngLatBounds.
 *
 * Gets the value of the longitudeEast field of @object.
 *
 * Returns: the field value.
 */
double maplibre_lng_lat_bounds_get_longitude_east(MaplibreLngLatBounds* object);

/**
 * maplibre_lng_lat_bounds_get_latitude_south
 * @object: a #MaplibreLngLatBounds.
 *
 * Gets the value of the latitudeSouth field of @object.
 *
 * Returns: the field value.
 */
double maplibre_lng_lat_bounds_get_latitude_south(MaplibreLngLatBounds* object);

/**
 * maplibre_lng_lat_bounds_get_latitude_north
 * @object: a #MaplibreLngLatBounds.
 *
 * Gets the value of the latitudeNorth field of @object.
 *
 * Returns: the field value.
 */
double maplibre_lng_lat_bounds_get_latitude_north(MaplibreLngLatBounds* object);

G_END_DECLS

#endif  // PIGEON_PIGEON_G_H_
